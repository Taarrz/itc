//goSlight
#define RgoS 13
#define YgoS 12
#define GgoS 11
//goWlight
#define RgoW 10
#define YgoW 9
#define GgoW 8
//goPlight
#define RgoP 7
#define GgoP 6
//input
#define goSsw 5
#define goWsw 4
#define goPsw 2
//state
#define goS 0
#define waitStoW 1
#define waitStoP 2
#define goW 3
#define waitWtoS 4
#define waitWtoP 5
#define goP 6
#define waitPtoW10 7
#define waitPtoW11 8
#define waitPtoW20 9
#define waitPtoW21 10
#define waitPtoW30 11
#define waitPtoW 12
#define waitPtoS10 13
#define waitPtoS11 14
#define waitPtoS20 15
#define waitPtoS21 16
#define waitPtoS30 17 
#define waitPtoS 18 
struct State {
  unsigned long St_out;
  unsigned long Time;
  unsigned long Next[8];
};
typedef const struct State SType;
SType FSM[19] = {
  {B00110010, 2000, {goS, waitStoP, waitStoW, waitStoW, goS, waitStoP, waitStoW, waitStoW}}, //gos
  {B01010010, 500, {goW, goW, goW, goW, goW, goW, goW, goW}},//waitStoW
  {B01010010, 500, {goP, goP, goP, goP, goP, goP, goP, goP}}, //waitStoP  
  {B10000110, 2000, {goW, waitWtoP,  goW, waitWtoP, waitWtoS,  waitWtoP,  waitWtoS,  waitWtoP}}, //goW
  {B10001010, 500, {goS, goS, goS, goS, goS, goS, goS, goS}}, //waitWtoS
  {B10001010, 500, {goP, goP, goP, goP, goP, goP, goP, goP}}, //waitWtoP
  {B10010001, 2000, {goP, goP, waitPtoW10, waitPtoW10, waitPtoS10, waitPtoS10, waitPtoS10, waitPtoS10}}, //goP
  {B10010000, 300, {waitPtoW11, waitPtoW11, waitPtoW11, waitPtoW11, waitPtoW11, waitPtoW11, waitPtoW11, waitPtoW11}}, //waitPtoW10
  {B10010001, 300, {waitPtoW20, waitPtoW20, waitPtoW20, waitPtoW20, waitPtoW20, waitPtoW20, waitPtoW20, waitPtoW20}}, //waitPtoW11
  {B10010000, 300, {waitPtoW21, waitPtoW21, waitPtoW21, waitPtoW21, waitPtoW21, waitPtoW21, waitPtoW21, waitPtoW21}}, //waitPtoW20
  {B10010001, 300, {waitPtoW30, waitPtoW30, waitPtoW30, waitPtoW30, waitPtoW30, waitPtoW30, waitPtoW30, waitPtoW30}}, //waitPtoW21
  {B10010000, 300, {waitPtoW, waitPtoW, waitPtoW, waitPtoW, waitPtoW, waitPtoW, waitPtoW, waitPtoW}}, //waitPtoW30
  {B10010001, 300, {goW, goW, goW, goW, goW, goW, goW, goW}}, //waitPtoW
  {B10010000, 300, {waitPtoS11, waitPtoS11, waitPtoS11, waitPtoS11, waitPtoS11, waitPtoS11, waitPtoS11, waitPtoS11}}, //waitPtoS10
  {B10010001, 300, {waitPtoS20, waitPtoS20, waitPtoS20, waitPtoS20, waitPtoS20, waitPtoS20, waitPtoS20, waitPtoS20}}, //waitPtoS11
  {B10010000, 300, {waitPtoS21, waitPtoS21, waitPtoS21, waitPtoS21, waitPtoS21, waitPtoS21, waitPtoS21, waitPtoS21}}, //waitPtoS20
  {B10010001, 300, {waitPtoS30, waitPtoS30, waitPtoS30, waitPtoS30, waitPtoS30, waitPtoS30, waitPtoS30, waitPtoS30}}, //waitPtoS21
  {B10010000, 300, {waitPtoS, waitPtoS, waitPtoS, waitPtoS, waitPtoS, waitPtoS, waitPtoS, waitPtoS}}, //waitPtoS30
  {B10010001, 300, {goS, goS, goS, goS, goS, goS, goS, goS}} //waitPtoS
};
int input, inputS, inputW, inputP;
int NowSt=0;
int lightpins[8]={RgoS,YgoS,GgoS,RgoW,YgoW,GgoW,RgoP,GgoP};
void setup() {
 pinMode(goSsw,INPUT_PULLUP);
 pinMode(goWsw,INPUT_PULLUP);
 pinMode(goPsw,INPUT_PULLUP); 
 for(int i=0;i<8;i++){
  pinMode(lightpins[i],OUTPUT);
  }
  Serial.begin(9600);
}
void loop() {
  for(int i=0;i<8;i++){
    digitalWrite(lightpins[7-i],!(bitRead(FSM[NowSt].St_out,i)));
    }
  delay(FSM[NowSt].Time);
  inputS=!digitalRead(goSsw);
  inputW=!digitalRead(goWsw);
  inputP=!digitalRead(goPsw);
  input=inputS*4+inputW*2+inputP;
  NowSt = FSM[NowSt].Next[input];
}
